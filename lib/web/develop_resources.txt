*** Settings ***
Library           Selenium2Library
Resource          Common_resources.txt

*** Variables ***
${DT_Console_Page_xpath}    ${EMPTY}
${Select_Demo_App_xpath}    ${EMPTY}
${Import_Button_xpath}    ${EMPTY}
${pkg_success_xpath}    //div[contains(@class,'alert-success')]//span[text()='Package(s) successfully imported']
${Pkg_Name_Link_xpath}    ${EMPTY}
${Launch_The_App_xpath}    ${EMPTY}
${Launch_App_Alert_xpath}    ${EMPTY}
${Select_Use_Config_file_xpath}    //label/input[@ng-model="launchOptions.usingConfigFile"]
${Launch_Success_Button_xpath}    //span[text()='Launch']/..
${Upload_New_Pkg}    //t[text()="upload a package"]/..
${Upload_Dialogue_Button}    //p[text()="Drag a file here"]/..//button
${File_Upload_Success}    //span[contains(text(),"uploaded")]/../..
${Input_Tag_Type}    //input[@type='file']
${Import_From_DtHub}    //t[text()='import from dtHub']/..
${Demo_Pkg_Import_Successful}    //div[contains(text(),"imported")]
${Pkg_In_App_Pkgs_table}    ${EMPTY}
${App_Launch_Success_Msg}    //t[contains(text(),"Application ID")]
${Goto_Application_Packages_Link}    //t[text()="Application Packages"]/..
${App_Pkg_Breadcrum}    //a[text()='App Packages']

*** Keywords ***
Develop_The_App
    [Arguments]    ${app_type}    ${app_name}    ${app_jar}=None
    Go_To_Page    Develop    Application Packages    #Application Packages
    Comment    Click Element    xpath=${Goto_Application_Packages_Link}
    sleep    5s
    Wait Until Page Contains    Application Packages    timeout=5s
    Page Should Not Contain   Cluster
    Go_To_Page    AppHub   AppHub
    sleep  12s    #Takes time to list packages
    Click Element      xpath=/html/body/div[2]/div/div[1]/label[2]
    sleep      1s
    ${Select_Demo_App_xpath}=    Set Variable    //span[text()='${app_name}']/../..//input[@type='checkbox']
    log   ${Select_Demo_App_xpath}
    Run Keyword If    '${app_type}'=='Demo'    Import_Demo_App    ${app_name}
    Run Keyword Unless    '${app_type}'=='Demo'    Import_New_App    ${app_jar}

Import_Demo_App
    [Arguments]    ${app_name}
    #Click Element    xpath=${Import_Demos_xpath}    #For 2.0.0 Console, xpath=//span[text()='import demos']/..    #For 2.1.0 Console,xpath=//t[text()='import demos']/..
    ${Select_Demo_App_xpath}=    Set Variable     //*[contains(text(),'${app_name}')]
    log   ${Select_Demo_App_xpath}
    Wait Until Element Is Visible    xpath=${Select_Demo_App_xpath}
    Click Element    xpath=${Select_Demo_App_xpath}
    sleep   10s
    Click Button    xpath=/html/body/div[2]/div/h2/div/button[1]
    Wait Until Element Is Visible    xpath=/html/body/div[4]/div/div[4]/a    timeout=1000   #TAKES DAMN LONG !
    #${Pkg_In_App_Pkgs_table}    Set Variable    //table//a[contains(text(),'${app_name}')]
    #Wait Until Page Contains Element    xpath=${Pkg_In_App_Pkgs_table}
    #Wait Until Element Is Visible    xpath=${pkg_success_xpath}    timeout=10s
    Connect_To_DT_Console    ${url}

Launch_The_App
    [Arguments]    ${pkg_name}    ${app_name}
    Select_App_From_Given_Pkg_List    ${pkg_name}    ${app_name}
    ${Launch_App_Alert_xpath}    Set Variable    //h3//span[contains(text(),'${app_name}')]
    sleep    5s
    Click Button      xpath=/html/body/div[2]/div/h1/span[2]/button[1]
    sleep      5s
    Wait Until Element Is Enabled    xpath=/html/body/div[1]/div/div/form/div[3]/button[1]    timeout=30s
    Click Button      xpath=/html/body/div[1]/div/div/form/div[3]/button[1]
    Wait Until Element Is Not Visible    xpath=/html/body/div[1]/div/div/form/div[3]/button[1]     timeout=60s

Import_New_App
    [Arguments]    ${File_To_Upload}
    Click Element    xpath=${Upload_New_Pkg}
    Wait Until Element Is Visible    xpath=${Upload_Dialogue_Button}
    Click Element    xpath=${Upload_Dialogue_Button}
    Choose File    ${Input_Tag_Type}    ${File_To_Upload}
    Wait Until Element Is Visible    ${File_Upload_Success}    timeout=10s

Select_App_From_Given_Pkg_List
    [Arguments]    ${pkg_name}    ${app_name}    # To select package from the list
    Go_To_Page    Develop    Development
    sleep      2s
    Click Element       xpath=/html/body/div[2]/div/div[1]/h2/a
    sleep      2s
    Comment    Click Element    xpath=${Goto_Application_Packages_Link}
    Comment    Wait Until Page Contains    Ingestion    timeout=20s
    Comment    Click Element    xpath=//table//a[text()='${app_name}']/../../td[3]//button[1]
    Wait Until Page Contains    ${app_name}    timeout=10s
    Click Element      xpath=/html/body/div[2]/div/h1/div/label[1]
    sleep      1s
    ${Launch_The_App_xpath}    Set Variable    //table//a[contains(text(),'${app_name}')]     #/../../td[3]//button[1]    #//table//a[contains(text(),'${app_name}')]/../../td[5]//button    #For 2.0.0 Console : //table//a[contains(text(),'${app_name}')]/../../td[4]/button    For 2.1.0 Console: //table//a[contains(text(),'${app_name}')]/../../td[5]//button
    Click Element    xpath=${Launch_The_App_xpath}
    sleep    2s

###   CUSTOM ###

Delete_App_From_Develop_Page
    [Arguments]    ${pkg_name}    ${app_name}    ${version}  # To select package from the list
    Go to  ${url}static/#/dev/packages/${username}/${pkg_name}/${version}/  #set your username in variables  in tf2jan/Tests/web/DT_Web_Console/DT_web_console.txt
    ${delete}  Set Variable   /html/body/div[2]/div/div[2]/button[2]
    Click Button  xpath=${delete}
    sleep  2s
    Click Button  xpath=/html/body/div[1]/div/div/div[3]/button[1]
    Capture Page Screenshot

Launch_The_App_New
    [Arguments]    ${pkg_name}    ${app_name}    ${version}
    Select_App_From_Given_Pkg_List_New    ${pkg_name}    ${app_name}    ${version}
    ${Launch_App_Alert_xpath}    Set Variable    //h3//span[contains(text(),'Launch ${app_name}')]



Select_App_From_Given_Pkg_List_New
    [Arguments]    ${pkg_name}    ${app_name}    ${version}   # To select package from the list
    log    ${pkg_name}
    Go_To_Page    Develop     Application Packages
    Wait Until Page Contains     Application Packages
    Click Element    xpath=/html/body/div[2]/div/div[1]/h2/a
    Click Element   xpath=/html/body/div[2]/div/h1/div/label[1]
    #Click Element   xpath=/html/body/div[2]/div/div[4]/div[1]/div[2]/h2/a
    #Click Element    xpath=/html/body/div[4]/div/div[4]/a
    #${Select_Demo_App_xpath}=    Set Variable     //*[contains(text(),'${app_name}')]
    log   ${Select_Demo_App_xpath}
    sleep    5s
    Go to  ${url}static/#/dev/packages/${username}/${pkg_name}/${version}
    sleep     5s
    Wait Until Page Contains     Applications
    Go to  ${url}static/#/dev/packages/${username}/${pkg_name}/${version}/applications/${app_name}
    sleep    5s
    Click Element    xpath=/html/body/div[2]/div/h1/span[2]/button
    Click Element    xpath=/html/body/div[1]/div/div/form/div[3]/button[1]

Search_Box_Testing                      #Searches in tables
    [Arguments]    ${locator}    ${keyword}     ${opr}=False
    ${result}=    Fetch From Left     ${locator}      /input
    ${length}=      Get Length      ${result}
    ${a}        Evaluate       ${length}-6
    ${b}        Evaluate       ${length}-12
    ${td}=      Get Substring       ${result}       ${a}       ${length}
    ${tr}=      Get Substring       ${result}       ${b}       ${a}
    ${result}=    Fetch From Left      ${result}        ${td}
    ${result}=    Fetch From Left      ${result}        ${tr}
    ${result}=      Replace String        ${result}       thead      tbody[3]/
    ${r}    Set Variable    ${result}
    ${result}=    Catenate     ${result}${td}
    Log     ${result}
    ${value1}=   Get Matching Xpath Count       ${result}
    Log     Value 1 is ${value1}
    Input Text      xpath=${locator}    ${keyword}
    Wait Until Page Contains    ${keyword}
    ${value2}=   Get Matching Xpath Count        ${result}       #/html/body//table//td[1]   #//div//table/thead/tr[2]//input
    Log    Value 2 is ${value2}
    Log     ${opr}
    ${i}    Set Variable    1
    ${txt}    Set Variable    text
    ${result}=    Fetch From Left      ${result}    ${td}
    ${result}=    Fetch From Left      ${result}    //
    Capture Page Screenshot
    : FOR    ${i}    IN RANGE    1      ${value2}+1
    \    ${tr}      Set Variable    tr[${i}]
    \    ${s}=      Catenate    ${r}${tr}${td}
    \    Log    ${s}
    \    ${txt}   Get Text     ${s}
    \    Convert To String     ${txt}
    \    Should Contain   ${txt}      ${keyword}
    Clear Element Text  xpath=${locator}
    Capture Page Screenshot





Search_Box_Testing_Negative          #Searches in tables
    [Arguments]    ${locator}    ${keyword}     ${opr}=False
    ${result}=    Fetch From Left     ${locator}      /input
    ${length}=      Get Length      ${result}
    ${a}        Evaluate       ${length}-6
    ${b}        Evaluate       ${length}-12
    ${td}=      Get Substring       ${result}       ${a}       ${length}
    ${tr}=      Get Substring       ${result}       ${b}       ${a}
    ${result}=    Fetch From Left      ${result}        ${td}
    ${result}=    Fetch From Left      ${result}        ${tr}
    ${result}=      Replace String        ${result}       thead      tbody[3]/
    ${r}    Set Variable    ${result}
    ${result}=    Catenate     ${result}${td}
    Log     ${result}
    ${value1}=   Get Matching Xpath Count       ${result}
    Log     Value 1 is ${value1}
    Input Text      xpath=${locator}    ${keyword}
    ${value2}=   Get Matching Xpath Count        ${result}       #/html/body//table//td[1]   #//div//table/thead/tr[2]//input
    Log    Value 2 is ${value2}
    Should Be Equal     ${value2}   0

Search_List_Testing
    [Arguments]    ${locator}    ${keyword}     ${opr}=False
    ${value1}=   Get Matching Xpath Count        ${locator}         #/html/body//table/tbody[3]//td[1]
    Log     Value 1 is ${value1}
    Input Text      xpath=${locator}    ${keyword}
    Wait Until Page Contains    ${keyword}
    ${value2}=   Get Matching Xpath Count        ${locator}     #/html/body//table/tbody[3]//td[1]   #//div//table/thead/tr[2]//input
    Log    Value 2 is ${value2}
    Log     ${opr}
    Run Keyword If      "${opr}" == "true"     Should Be True   ${value1}>=${value2}
    Run Keyword If      "${opr}" == "False"    Should Be True   ${value1}>${value2}


######SH Keywords##########

Search_Box_Testing_Update
    [Arguments]    ${locator}    ${keyword}     ${opr}=False
    ${value1}=   Get Matching Xpath Count       /html/body//table/tbody[3]//td[1]
    Log     Value 1 is ${value1}
    Input Text      xpath=${locator}    ${keyword}
    Wait Until Page Contains    ${keyword}
    ${value2}=   Get Matching Xpath Count       /html/body//table/tbody[3]//td[1]   #//div//table/thead/tr[2]//input
    Log    Value 2 is ${value2}
    Log     ${opr}
    Run Keyword If      "${opr}" == "true"     Should Be True   ${value1}>=${value2}
    Run Keyword If      "${opr}" == "False"    Should Be True   ${value1}>${value2}

Read_Table_Hard_Coded
    [Arguments]    ${table_locator}
    [Documentation]    Reads the given table containent. Returns dictonary having table containent and table headers in list
    Comment    Read and fetch table headers
    ${Gw_Info_Header_List}=    Create List    #List for storing headers of the table
    ${Table_Data_Dict}=    Create Dictionary    #Dictonary for storing values from the table
    Comment    Loop which retrives of headers and add into the list
    Comment    Read and fetch table cells
    ${tTr_xpath}    Catenate    ${table_locator}    /tbody/tr    #Creating xpath for getting table tr to get number of rows
    ${list_web_ele}=    Get Webelements    ${tTr_xpath}
    ${list_len}=    Get Length    ${list_web_ele}
    : FOR    ${i}    IN RANGE    0    ${list_len}
    \    Log    ${i}
    \    ${j}=    Set Variable    ${${i}+1}
    \    Comment    Read the table cells
    \    ${item_xpath}=    Catenate    ${table_locator}    /tbody/tr[${j}]/td[1]    #Read first cell and add it as key in dictionary
    \    ${item}    Get Text    ${item_xpath}
    \    ${Dict_Values_List}    Create List    #List For stroring columns of the table except first
    \    ${Dict_Values_List}=    Read_Table_Cells_Data_Inner_Loop    ${j}    ${table_locator}    2      #Read data from remaining data cells and creates one list
    \    Set To Dictionary    ${Table_Data_Dict}    ${item}    ${Dict_Values_List}
    Log Dictionary    ${Table_Data_Dict}
    [Return]    ${Gw_Info_Header_List}    ${Table_Data_Dict}

